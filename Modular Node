Given the head of a Singly Linked List and a number k, the task is to find the modular node of the linked list. If no such index is present return -1.

A modular node is defined as the last node in the linked list whose index is divisible by k (i%k==0). 

Note: 1-based indexing is followed

class Solution {
  public:
    int modularNode(Node *head, int k) {
        // Code here
        Node *temp=head;
        int idx=0;
        int res=0;
        while(temp!=NULL){
            idx++;
            if(idx%k==0){
                res=temp->data;
            }
            temp=temp->next;
        }
        if(res==0){
            res=-1;
        }
        return res;
    }
};
